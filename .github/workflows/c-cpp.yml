name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-unix:
    # NOTE: temporarily setting this to get over 20.04 not having libsoup3
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: install deps
        run: |
          sudo apt-get update
          sudo apt-get upgrade
          sudo apt-get install python3-pip gcc \
                               libgtk-3-dev \
                               libjson-glib-dev \
                               libsoup-3.0-dev \
                               gettext \
                               \
                               libgeoip-dev \
                               libappstream-dev \
                               appstream-util \

          # Meson is too old on ubuntu
          pip3 install --no-input meson ninja
      - name: meson configure
        run: meson build
      - name: build
        run: meson compile -C build
      - name: dist
        run: meson dist -C build

  build-windows:

    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:

      - uses: msys2/setup-msys2@v2
      - name: install deps
        run: |
          pacman -S --noconfirm \
                    git \
                    mingw-w64-x86_64-gcc \
                    mingw-w64-x86_64-meson \
                    mingw-w64-x86_64-ninja \
                    mingw-w64-x86_64-pkg-config \
                    \
                    mingw-w64-x86_64-gtk3 \
                    mingw-w64-x86_64-libsoup3 \
                    mingw-w64-x86_64-glib2 \
                    mingw-w64-x86_64-gettext \
                    mingw-w64-x86_64-json-glib \
                    \
                    mingw-w64-x86_64-appstream-glib \
                    mingw-w64-x86_64-desktop-file-utils

      - uses: actions/checkout@v3
      - name: configure
        run: meson build
      - name: build
        run: meson compile -C build
      - name: dist
        run: |
          # Why? Line Endings.
          # actions/checkout runs as a native windows environment and wants
          # to put CRLF on all lines, while msys2 looks at this and thinks
          # that every single file has been changed since the line ending is
          # not LF. Afterwards, `meson dist` (on msys2) will report the repo as
          # dirty then fail on meson >=0.62 due to the changed default behavior
          # dist fails on dirty repos. The solution to this is to just add
          # `--allow-dirty` since our CI runners use the latest meson. But this
          # is not the cleanest solution since we do care if the repo is dirty,
          # so add a non-whitespace diff-index check before running meson-dist.
          git --no-pager diff-index --quiet -b HEAD 2>/dev/null || { git --no-pager diff -b; exit 1; }
          meson dist --allow-dirty -C build
